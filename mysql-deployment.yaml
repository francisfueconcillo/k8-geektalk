apiVersion: v1
kind: Namespace
metadata:
  name: geektalk
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: geektalk
data:
  mysql.database: exampledb
  mysql.user: exampleuser
  mysql.password: examplepass
  mysql.rootpassword: changeit
---
apiVersion: v1
kind: PersistentVolume   # https://kubernetes.io/docs/concepts/storage/persistent-volumes/
metadata:
  name: geektalk-pv
  namespace: geektalk
spec:
  capacity:
    storage: 500M
  accessModes:
    - ReadWriteOnce  #- the volume can be mounted as read-write by a single node
  hostPath:
    path: /data/geektalk/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc     # this create a PV with 200M size and hostPath to /tmp/hostpath-provisioner/geektalk/mysql-pvc
  namespace: geektalk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200M
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
  namespace: geektalk
spec:
  type: ClusterIP  # https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  selector:
    app: mysql-svc
  ports:
  - port: 3306 # service port
    targetPort: 3306   # container's port
    protocol: TCP
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mysql-deploy
  namespace: geektalk
spec:
  selector:
    matchLabels:
      app: mysql-svc
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql-svc
    spec:
      containers:
      - name: mysql  # https://hub.docker.com/_/wordpress
        image: mysql:5.7
        ports:
        - containerPort: 3306
        volumeMounts:
        - name: mysql-volume
          mountPath: /var/lib/mysql
        env:
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: mysql.database
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: mysql.user
        - name: MYSQL_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: mysql.password
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: mysql-config
              key: mysql.rootpassword
      volumes:
        - name: mysql-volume
          hostPath:
            path: /data/mysql/
---