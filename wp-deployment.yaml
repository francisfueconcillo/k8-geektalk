apiVersion: v1
kind: Namespace
metadata:
  name: geektalk
---
apiVersion: v1
kind: PersistentVolume   # https://kubernetes.io/docs/concepts/storage/persistent-volumes/
metadata:
  name: geektalk-pv
  namespace: geektalk
spec:
  capacity:
    storage: 500M
  accessModes:
    - ReadWriteOnce  #- the volume can be mounted as read-write by a single node
  hostPath:
    path: /data/geektalk/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wordpress-pvc   # this create a PV with 200M size and hostPath to /tmp/hostpath-provisioner/geektalk/wordpress-pvc
  namespace: geektalk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200M
---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-svc
  namespace: geektalk
spec:
  type: ClusterIP  # https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  selector:
    app: wordpress-svc
  ports:
  - port: 80 # seprvice port
    targetPort: 80   # container's ort
    protocol: TCP
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: wordpress-deploy
  namespace: geektalk
spec:
  selector:
    matchLabels:
      app: wordpress-svc
  replicas: 2
  template:
    metadata:
      labels:
        app: wordpress-svc
    spec:
      containers:
      - name: wordpress  # https://hub.docker.com/_/wordpress
        image: wordpress
        ports:
        - containerPort: 80
        volumeMounts:
        - name: wordpress-volume
          mountPath: /var/www/html
      volumes:
        - name: wordpress-volume
          persistentVolumeClaim:
            claimName: wordpress-pvc
      
      # additional containers can be added here
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: ambassador
  name: geektalk-ingress
  namespace: geektalk
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: wordpress-svc
          servicePort: 80